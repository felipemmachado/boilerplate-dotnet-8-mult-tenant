# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - dev
      - main
      - feature/*
      - release/*
      - fix/*
      - hotfix/*

variables:
  solution: "YouinAPI.sln"
  project: "**/src/API/API.csproj"
  testPath: "Application.UnitTests"
  buildConfiguration: "Release"

pool:
  name: Azure Pipelines

steps:
  - checkout: self
    fetchDepth: 0

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: "$(project)"

  - task: SonarCloudPrepare@1
    displayName: Sonar Cloud Prepare
    inputs:
      SonarCloud: "SonarCloud"
      organization: "rhitmotechnology"
      scannerMode: "MSBuild"
      projectKey: "RhitmoTech_youin_backend"
      projectName: "youin_backend"
      extraProperties: |
        sonar.cs.opencover.reportsPaths=$(testPath)/*/coverage.opencover.xml
        sonar.coverage.exclusions=**/Api/**/*.*, **/Infra/**/*.*
        sonar.exclusions="**/Infra/Migrations/**/*.*"

  - task: DotNetCoreCLI@2
    inputs:
      command: "build"
      projects: "$(project)"

  - task: DotNetCoreCLI@2
    displayName: Test
    inputs:
      command: test
      solution: "$(solution)"
      arguments: "--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"

  - task: SonarCloudAnalyze@1
    displayName: "Run Code Analysis"

  - task: SonarCloudPublish@1
    displayName: "Publish Quality Gate Result"
